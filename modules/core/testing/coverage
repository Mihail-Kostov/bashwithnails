#!/bin/bash
#NAMESPACE=testing

namespaced COVERAGE_DATA=''
namespaced ASSUME_COVERED=0

function get_coverage(testfile) {
    export PS4='D: ${BASH_SOURCE} ${LINENO} +++ '
    namespaced COVERAGE_DATA=`/bin/bash -xv $testfile 2>&1| grep '^D*:' | cut -d\+ -f1 | cut -d- -f2- | sed -e 's/~/\//g' | grep -v "^D*:" | sort | uniq |\
    sed -e 's/\.\(..........\) / /g'`

}

function get_uncoverable(line) {
    local grepfound=`echo $line | grep -c '^$'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g" | grep -c '^#'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^{'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^}'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^function'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^do$'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^done$'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^then$'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^else$'`
    let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g"| grep -c '^fi$'`
    echo $grepfound
}

function coverage_toggle(line) {
    if [[ `echo $line | sed -e "s/ //g" | grep -c '^#@covered-begin'` -eq 1 ]]
    then
        namespaced ASSUME_COVERED=1
    fi
    if [[ `echo $line | sed -e "s/ //g" | grep -c '^#@covered-end'` -eq 1 ]]
    then
        namespaced ASSUME_COVERED=0
    fi
}

function is_covered(file line_num) {
    if [[ ${namespaced ASSUME_COVERED} -eq 0 ]]
    then
        echo "${namespaced COVERAGE_DATA}" | grep "^${file} " | cut -d\  -f2 | grep -c "^${line_num}$"
    else
        echo 1
    fi
}

function coverage_verbose(testfile ignore_file) {
    this::get_coverage $testfile

    uniq_fn=`echo "${namespaced COVERAGE_DATA}" | cut -d\  -f1 | uniq | grep -v $ignore_file`

    for file in $uniq_fn
    do
        echo Code coverage of: $SCRIPT_DIR/$MODULE_DIR/$file
        LINE_NO=0
        LN_TOTAL=0
        LN_COVERED=0
        LN_UNCOVERABLE=0
        while IFS='' read -r line ||  [[ -n "$line" ]]; do
            let LINE_NO=$LINE_NO+1
            this::coverage_toggle "$line"
            if [[ `this::is_covered $file $LINE_NO` -eq 1 ]]
            then
                let LN_COVERED=$LN_COVERED+1
                echo -en $'\e[0;32m'" $LINE_NO: $line \n"$'\e[39;49m'
            else
                if [[ `this::get_uncoverable "$line"` -gt 0 ]]
                then
                    let LN_UNCOVERABLE=$LN_UNCOVERABLE+1
                    echo -en $'\e[0;37m'" $LINE_NO: $line \n"$'\e[39;49m'
                else
                    echo -en $'\e[0;31m'" $LINE_NO: $line \n"$'\e[39;49m'
                fi
            fi
        let LN_TOTAL=$LN_TOTAL+1
        done < $SCRIPT_DIR/$MODULE_DIR/$file
        PERCENT=`echo "scale=2; (${LN_COVERED}/(${LN_TOTAL}-${LN_UNCOVERABLE}))*100" | bc`
        echo "Total lines: $LN_TOTAL  / Uncoverable: $LN_UNCOVERABLE / Covered: $LN_COVERED ($PERCENT%) "
    done
}


function coverage_summary(testfile ignore_file) {
    this::get_coverage $testfile

    uniq_fn=`echo "${namespaced COVERAGE_DATA}" | cut -d\  -f1 | uniq | grep -v $ignore_file`

    for file in $uniq_fn
    do
        echo Code coverage of: $SCRIPT_DIR/$MODULE_DIR/$file
        LINE_NO=0
        LN_TOTAL=0
        LN_COVERED=0
        LN_UNCOVERABLE=0
        while IFS='' read -r line ||  [[ -n "$line" ]]; do
            let LINE_NO=$LINE_NO+1
            this::coverage_toggle "$line"
            if [[ `this::is_covered $file $LINE_NO` -eq 1 ]]
            then
                let LN_COVERED=$LN_COVERED+1
            else
                if [[ `this::get_uncoverable "$line"` -gt 0 ]]
                then
                    let LN_UNCOVERABLE=$LN_UNCOVERABLE+1
                fi
            fi
        let LN_TOTAL=$LN_TOTAL+1
        done < $SCRIPT_DIR/$MODULE_DIR/$file
        PERCENT=`echo "scale=2; (${LN_COVERED}/(${LN_TOTAL}-${LN_UNCOVERABLE}))*100" | bc`
        echo "Total lines: $LN_TOTAL  / Uncoverable: $LN_UNCOVERABLE / Covered: $LN_COVERED ($PERCENT%) "
    done
}

